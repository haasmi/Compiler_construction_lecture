package ast;

public interface Visitor<T> {
	T visit(AddExpr n);
	T visit(AndExpr n);
	T visit(ArrayAccess n);
	T visit(ArrayType n);
	T visit(Assignment n);
	T visit(BaseArrayType n);
	T visit(Block n);
	T visit(CallExpr n);
	T visit(CallStmt n);
	T visit(DivExpr n);
	T visit(DoubleCastExpr n);
	T visit(DoubleLiteral n);
	T visit(DoubleType n);
	T visit(EqExpr n);
	T visit(Function n);
	T visit(GlobalVariable n);
	T visit(GreaterEqExpr n);
	T visit(GreaterExpr n);
	T visit(IfStmt n);
	T visit(IntegerCastExpr n);
	T visit(IntegerLiteral n);
	T visit(IntegerType n);
	T visit(LessEqExpr n);
	T visit(LessExpr n);
	T visit(LocalVariable n);
	T visit(LocalVariableDeclaration n);
	T visit(LValueExpr n);
	T visit(ModExpr n);
	T visit(MultExpr n);
	T visit(NegExpr n);
	T visit(NotEqExpr n);
	T visit(NotExpr n);
	T visit(OrExpr n);
	T visit(Parameter n);
	T visit(Program n);
	T visit(ReferenceType n);
	T visit(ReturnParameter n);
	T visit(StrcmpExpr n);
	T visit(StringLiteral n);
	T visit(StringType n);
	T visit(SubExpr n);
	T visit(VariableAccess n);
	T visit(VoidType n);
	T visit(WhileStmt n);
}
